{"version":3,"sources":["request/errorHandler.js","request/successHandler.js","router/PrivateRoute.js","router/PublicRoute.js","components/PageLoader/index.js","router/index.js","redux/auth/reducer.js","redux/crud/reducer.js","redux/erp/reducer.js","redux/notify/types.js","redux/notify/reducer.js","redux/search/reducer.js","redux/rootReducer.js","redux/store.js","components/Navigation/index.js","app/index.js","app/useNetwork.js","serviceWorker.js","index.js","redux/crud/types.js","redux/erp/types.js","redux/search/types.js","redux/auth/types.js","auth/auth.service.js","auth/cookie.js","config/serverApiConfig.js","redux/storePersist.js","request/codeMessage.js","utils/history.js"],"names":["errorHandler","error","emptyResult","response","status","message","data","errorText","codeMessage","notification","config","duration","description","jwtExpired","history","push","success","result","successHandler","url","PrivateRoute","Component","component","rest","type","damping","stiffness","render","props","authService","get","motion","div","transition","initial","y","opacity","animate","exit","to","PublicRoute","x","scale","PageLoader","className","size","Dashboard","lazy","Patient","Customer","Invoice","Quote","Login","Logout","NotFound","Router","location","useLocation","fallback","AnimatePresence","exitBeforeEnter","path","exact","pathname","INITIAL_STATE","current","loading","isLoggedIn","authReducer","state","action","actionTypes","payload","INITIAL_KEY_STATE","isLoading","isSuccess","list","items","pagination","pageSize","total","create","update","delete","read","search","crudReducer","keyState","erpReducer","START_LOADING","FINISH_LOADING","UPDATE_UI","notifyReducer","actionName","ActionProps","INITIAL_REF_STATE","selected","searchReducer","newState","map","refKey","appReducer","combineReducers","auth","notify","crud","erp","rootReducer","undefined","middleware","createLogger","thunk","configStore","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","initialState","storePersist","store","createStore","Sider","Layout","SubMenu","Menu","Navigation","useState","collapsed","setCollapsed","collapsible","onCollapse","style","zIndex","theme","defaultSelectedKeys","mode","Item","icon","DashboardOutlined","CustomerServiceOutlined","DesktopOutlined","UserOutlined","title","TeamOutlined","App","navigator","onLine","isOnline","setNetwork","useEffect","console","log","useNetwork","minHeight","subTitle","extra","href","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","RESET_STATE","CURRENT_ITEM","REQUEST_LOADING","REQUEST_SUCCESS","REQUEST_FAILED","CURRENT_ACTION","RESET_ACTION","INIT_STATE","CURRENT_SELECTED","RESET_REF","FAILED_REQUEST","LOADING_REQUEST","LOGIN_SUCCESS","LOGOUT_SUCCESS","login","loginUserData","a","axios","post","API_BASE_URL","Date","getTime","token","set","logout","remove","clear","cookieName","localStorage","getItem","JSON","parse","getCookie","ACCESS_TOKEN_NAME","cookieValue","setItem","stringify","removeItem","DOWNLOAD_BASE_URL","key","getAll","200","201","202","204","400","401","403","404","406","410","422","500","502","503","504","createBrowserHistory"],"mappings":"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","file":"static/js/main.a52bcb10.chunk.js","sourcesContent":["import { notification } from \"antd\";\nimport history from \"@/utils/history\";\nimport codeMessage from \"./codeMessage\";\n\nconst errorHandler = (error, emptyResult = null) => {\n  const { response } = error;\n\n  if (!response) {\n    // notification.config({\n    //   duration: 20,\n    // });\n    // notification.error({\n    //   message: \"No internet connection\",\n    //   description: \"Cannot connect to the server, Check your internet network\",\n    // });\n    return {\n      success: false,\n      result: emptyResult,\n      message: \"Cannot connect to the server, Check your internet network\",\n    };\n  } else if (response && response.status) {\n    const message = response.data && response.data.message;\n    const errorText = message || codeMessage[response.status];\n    const { status } = response;\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: `Request error ${status}`,\n      description: errorText,\n    });\n    if (error.response.data.jwtExpired) {\n      history.push(\"/logout\");\n    }\n    return response.data;\n  } else {\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: \"Unknown Error\",\n      description: \"An unknown error occurred in the app, please try again. \",\n    });\n    return {\n      success: false,\n      result: emptyResult,\n      message: \"An unknown error occurred in the app, please try again. \",\n    };\n  }\n};\n\nexport default errorHandler;\n","import { notification } from \"antd\";\n\nimport codeMessage from \"./codeMessage\";\n\nconst successHandler = (response, typeNotification = {}) => {\n  if (!response.data.result) {\n    response = {\n      ...response,\n      status: 404,\n      url: null,\n      data: {\n        success: false,\n        result: null,\n      },\n    };\n  }\n  const { data } = response;\n  if (data.success === false) {\n    const message = data && data.message;\n    const errorText = message || codeMessage[response.status];\n    const { status } = response;\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: `Request error ${status}`,\n      description: errorText,\n    });\n  } else {\n    const message = data && data.message;\n    const successText = message || codeMessage[response.status];\n    const { status } = response;\n    // notification.config({\n    //   duration: 20,\n    // });\n    // notification.success({\n    //   message: `Request success`,\n    //   description: successText,\n    // });\n  }\n\n  return data;\n};\n\nexport default successHandler;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport * as authService from \"@/auth\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const config = {\n    type: \"spring\",\n    damping: 20,\n    stiffness: 100,\n  };\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n\n    <Route\n      {...rest}\n      render={(props) =>\n        authService.token.get() ? (\n          <motion.div\n            transition={config}\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            exit={{ y: -20, opacity: 0 }}\n          >\n            <Component {...props} />\n          </motion.div>\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport * as authService from \"@/auth\";\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        authService.token.get() ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <motion.div\n            initial={{ x: 200 }}\n            animate={{ x: 0 }}\n            exit={{ scale: 0 }}\n          >\n            <Component {...props} />\n          </motion.div>\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst PageLoader = () => {\n  return (\n    <div className=\"center\">\n      <Spin size=\"large\" />\n    </div>\n  );\n};\nexport default PageLoader;\n","import React, { lazy, Suspense } from \"react\";\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicRoute from \"./PublicRoute\";\nimport PageLoader from \"@/components/PageLoader\";\n\nconst Dashboard = lazy(() =>\n  import(/*webpackChunkName:'DashboardPage'*/ \"@/pages/Dashboard\")\n);\nconst Patient = lazy(() =>\n  import(/*webpackChunkName:'PatientPage'*/ \"@/pages/Patient\")\n);\nconst Customer = lazy(() =>\n  import(/*webpackChunkName:'CustomerPage'*/ \"@/pages/Customer\")\n);\nconst Invoice = lazy(() =>\n  import(/*webpackChunkName:'InvoicePage'*/ \"@/pages/Invoice\")\n);\nconst Quote = lazy(() =>\n  import(/*webpackChunkName:'QuotePage'*/ \"@/pages/Quote\")\n);\nconst Login = lazy(() =>\n  import(/*webpackChunkName:'LoginPage'*/ \"@/pages/Login\")\n);\nconst Logout = lazy(() =>\n  import(/*webpackChunkName:'LogoutPage'*/ \"@/pages/Logout\")\n);\nconst NotFound = lazy(() =>\n  import(/*webpackChunkName:'NotFoundPage'*/ \"@/pages/NotFound\")\n);\n\nfunction Router() {\n  const location = useLocation();\n  return (\n    <Suspense fallback={<PageLoader />}>\n      <AnimatePresence exitBeforeEnter initial={false}>\n        <Switch location={location} key={location.pathname}>\n          <PrivateRoute path=\"/\" component={Dashboard} exact />\n          <PrivateRoute component={Customer} path=\"/customer\" exact />\n          <PrivateRoute component={Patient} path=\"/patient\" exact />\n          <PrivateRoute component={Invoice} path=\"/invoice\" exact />\n          <PrivateRoute component={Quote} path=\"/quote\" exact />\n          <PrivateRoute component={Logout} path=\"/logout\" exact />\n          <PublicRoute component={Login} path=\"/login\" exact />\n          <Route path=\"/loader\" component={PageLoader} />\n          <Route\n            path=\"*\"\n            component={NotFound}\n            render={() => <Redirect to=\"/notfound\" />}\n          />\n        </Switch>\n      </AnimatePresence>\n    </Suspense>\n  );\n}\n\nexport default Router;\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_STATE = {\n  current: {},\n  loading: false,\n  isLoggedIn: false,\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.LOADING_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.FAILED_REQUEST:\n      return INITIAL_STATE;\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        current: action.payload,\n        loading: false,\n        isLoggedIn: true,\n      };\n    case actionTypes.LOGOUT_SUCCESS:\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_KEY_STATE = {\n  result: null,\n  current: null,\n  isLoading: false,\n  isSuccess: false,\n};\n\nconst INITIAL_STATE = {\n  current: {\n    result: null,\n  },\n  list: {\n    result: {\n      items: [],\n      pagination: {\n        current: 1,\n        pageSize: 10,\n        total: 1,\n      },\n    },\n    isLoading: false,\n    isSuccess: false,\n  },\n  create: INITIAL_KEY_STATE,\n  update: INITIAL_KEY_STATE,\n  delete: INITIAL_KEY_STATE,\n  read: INITIAL_KEY_STATE,\n  search: { ...INITIAL_KEY_STATE, result: [] },\n};\n\nconst crudReducer = (state = INITIAL_STATE, action) => {\n  const { payload, keyState } = action;\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return INITIAL_STATE;\n    case actionTypes.CURRENT_ITEM:\n      return {\n        ...state,\n        current: {\n          result: payload,\n        },\n      };\n    case actionTypes.REQUEST_LOADING:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          isLoading: true,\n        },\n      };\n    case actionTypes.REQUEST_FAILED:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          isLoading: false,\n          isSuccess: false,\n        },\n      };\n    case actionTypes.REQUEST_SUCCESS:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          result: payload,\n          isLoading: false,\n          isSuccess: true,\n        },\n      };\n    case actionTypes.CURRENT_ACTION:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          current: payload,\n        },\n      };\n    case actionTypes.RESET_ACTION:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_STATE[keyState],\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default crudReducer;\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_STATE = {\n  current: {\n    result: null,\n  },\n  list: {\n    result: {\n      items: [],\n      pagination: {\n        current: 1,\n        // defaultCurrent: 1,\n        pageSize: 10,\n        total: 1,\n      },\n    },\n    isLoading: false,\n    isSuccess: false,\n  },\n  create: {\n    result: null,\n    current: null,\n    isLoading: false,\n    isSuccess: false,\n  },\n  update: {\n    result: null,\n    current: null,\n    isLoading: false,\n    isSuccess: false,\n  },\n  delete: {\n    result: null,\n    current: null,\n    isLoading: false,\n    isSuccess: false,\n  },\n  read: {\n    result: null,\n    current: null,\n    isLoading: false,\n    isSuccess: false,\n  },\n  search: {\n    result: [],\n    current: null,\n    isLoading: false,\n    isSuccess: false,\n  },\n};\n\nconst erpReducer = (state = INITIAL_STATE, action) => {\n  const { payload, keyState } = action;\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return INITIAL_STATE;\n    case actionTypes.CURRENT_ITEM:\n      return {\n        ...state,\n        current: {\n          result: payload,\n        },\n      };\n    case actionTypes.REQUEST_LOADING:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          isLoading: true,\n        },\n      };\n    case actionTypes.REQUEST_FAILED:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          isLoading: false,\n          isSuccess: false,\n        },\n      };\n    case actionTypes.REQUEST_SUCCESS:\n      return {\n        ...state,\n        [keyState]: {\n          result: payload,\n          isLoading: false,\n          isSuccess: true,\n        },\n      };\n    case actionTypes.CURRENT_ACTION:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          current: payload,\n        },\n      };\n    case actionTypes.RESET_ACTION:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_STATE[keyState],\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default erpReducer;\n","export const START_LOADING = \"START_LOADING\";\nexport const FINISH_LOADING = \"FINISH_LOADING\";\nexport const UPDATE_UI = \"UPDATE_UI\";\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_STATE = {};\n\nconst notifyReducer = (state = INITIAL_STATE, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case actionTypes.START_LOADING:\n      return {\n        ...state,\n        [payload.actionName]: {\n          ...state[payload.actionName],\n          loading: true,\n        },\n      };\n    case actionTypes.FINISH_LOADING:\n      return {\n        ...state,\n        [payload.actionName]: {\n          ...state[payload.actionName],\n          loading: false,\n        },\n      };\n    case actionTypes.UPDATE_UI:\n      return {\n        ...state,\n        [payload.actionName]: {\n          ...state[payload.actionName],\n          ...payload.ActionProps,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default notifyReducer;\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_REF_STATE = {\n  result: [],\n  selected: null,\n  isLoading: false,\n  isSuccess: false,\n};\nconst INITIAL_STATE = {};\n\nconst searchReducer = (state = INITIAL_STATE, action) => {\n  const { payload = null, keyState = null } = action;\n  switch (action.type) {\n    case actionTypes.INIT_STATE: {\n      let newState = {};\n      payload.map((refKey) => (newState[refKey] = INITIAL_REF_STATE));\n      return newState;\n    }\n\n    case actionTypes.RESET_STATE:\n      return INITIAL_STATE;\n\n    case actionTypes.RESET_REF:\n      return {\n        ...state,\n        [keyState]: INITIAL_REF_STATE,\n      };\n\n    case actionTypes.CURRENT_SELECTED:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          selected: payload,\n        },\n      };\n    case actionTypes.REQUEST_LOADING:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_REF_STATE,\n          isLoading: true,\n        },\n      };\n    case actionTypes.REQUEST_FAILED:\n      return {\n        ...state,\n        [keyState]: INITIAL_REF_STATE,\n      };\n    case actionTypes.REQUEST_SUCCESS:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_REF_STATE,\n          result: payload,\n          isSuccess: true,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import { combineReducers } from \"redux\";\n\nimport { reducer as authReducer } from \"./auth\";\nimport { reducer as crudReducer } from \"./crud\";\nimport { reducer as erpReducer } from \"./erp\";\nimport { reducer as notifyReducer } from \"./notify\";\nimport { reducer as searchReducer } from \"./search\";\n\nimport * as actionTypes from \"./auth/types\";\n\n// Combine all reducers.\n\nconst appReducer = combineReducers({\n  auth: authReducer,\n  notify: notifyReducer,\n  crud: crudReducer,\n  erp: erpReducer,\n  search: searchReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === actionTypes.LOGOUT_SUCCESS) {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nimport rootReducer from \"./rootReducer\";\nimport storePersist from \"./storePersist\";\n\nconst logger = createLogger();\nlet middleware = [thunk];\n\nlet configStore = applyMiddleware(...middleware);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (process.env.NODE_ENV === \"development\") {\n  middleware = [...middleware, logger];\n  configStore = composeEnhancers(applyMiddleware(...middleware));\n}\n\nconst initialState = storePersist.get(\"auth\")\n  ? { auth: storePersist.get(\"auth\") }\n  : {};\n\nconst store = createStore(rootReducer, initialState, configStore);\n\nexport default store;\n","import React, { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  DesktopOutlined,\n  CustomerServiceOutlined,\n  DashboardOutlined,\n  TeamOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\n\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nfunction Navigation() {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const onCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n  return (\n    <>\n      <Sider\n        collapsible\n        collapsed={collapsed}\n        onCollapse={onCollapse}\n        style={{\n          zIndex: 1000,\n        }}\n      >\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n          <Menu.Item key=\"1\" icon={<DashboardOutlined />}>\n            <Link to=\"/\" />\n            Home Page\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Link to=\"/customer\">\n              <CustomerServiceOutlined />\n              <span>Customer Page</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"21\" icon={<CustomerServiceOutlined />}>\n            <Link to=\"/patient\" />\n            Patient Page\n          </Menu.Item>\n          <Menu.Item key=\"3\" icon={<DesktopOutlined />}>\n            <Link to=\"/days\" />\n            Days Page\n          </Menu.Item>\n          <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"User\">\n            <Menu.Item key=\"4\">Tom</Menu.Item>\n            <Menu.Item key=\"5\">Bill</Menu.Item>\n            <Menu.Item key=\"6\">Alex</Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\n            <Menu.Item key=\"7\">Team 1</Menu.Item>\n            <Menu.Item key=\"8\">Team 2</Menu.Item>\n          </SubMenu>\n        </Menu>\n      </Sider>\n    </>\n  );\n}\nexport default Navigation;\n","import React, { useEffect, useState, Suspense } from \"react\";\nimport { Router as RouterHistory } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport Router from \"@/router\";\nimport history from \"@/utils/history\";\nimport store from \"@/redux/store\";\nimport { notification, Layout } from \"antd\";\nimport Navigation from \"@/components/Navigation\";\nimport { Button, Result } from \"antd\";\nimport * as authService from \"@/auth\";\nimport useNetwork from \"./useNetwork\";\n\nfunction App() {\n  // const [isOnline, setNetwork] = useState(true);\n\n  // notification.config({\n  //   duration: 30,\n  // });\n\n  // window.ononline = (event) => {\n  //   setNetwork(true);\n  // };\n\n  // window.onoffline = (event) => {\n  //   setNetwork(false);\n  // };\n\n  // useEffect(() => {\n  //   if (isOnline) {\n  //     console.log(\"network is Connected \");\n  //   } else {\n  //     notification.error({\n  //       message: \"No internet connection\",\n  //       description:\n  //         \"Cannot connect to the server, Check your internet network\",\n  //     });\n  //   }\n  // }, [isOnline]);\n  const { isOnline } = useNetwork();\n\n  if (!isOnline)\n    return (\n      <>\n        <Result\n          status=\"404\"\n          title=\"No Internet Connection\"\n          subTitle=\"Check your Internet Connection or your network.\"\n          extra={\n            <Button href=\"/\" type=\"primary\">\n              Try Again\n            </Button>\n          }\n        />\n      </>\n    );\n  else\n    return (\n      <RouterHistory history={history}>\n        <Provider store={store}>\n          <Layout style={{ minHeight: \"100vh\" }}>\n            {authService.token.get() ? <Navigation /> : \"\"}\n            <Layout style={{ minHeight: \"100vh\" }}>\n              <Router />\n            </Layout>\n          </Layout>\n        </Provider>\n      </RouterHistory>\n    );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport default function useNetwork() {\n  const [isOnline, setNetwork] = useState(window.navigator.onLine);\n  const updateNetwork = () => {\n    setNetwork(window.navigator.onLine);\n  };\n  useEffect(() => {\n    // window.ononline = () => {\n    //   updateNetwork();\n    // };\n\n    // window.onoffline = () => {\n    //   updateNetwork();\n    // };\n    // window.addEventListener(\"offline\", updateNetwork);\n    // window.addEventListener(\"online\", updateNetwork);\n    // return () => {\n    //   window.removeEventListener(\"offline\", updateNetwork);\n    //   window.removeEventListener(\"online\", updateNetwork);\n    // };\n    setNetwork(window.navigator.onLine);\n  }, [window.navigator.onLine]);\n  console.log(\"network :\", isOnline);\n  return { isOnline };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./app\";\nimport \"./style/app.less\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const RESET_STATE = \"RESET_STATE\";\nexport const CURRENT_ITEM = \"CURRENT_ITEM\";\n\nexport const REQUEST_LOADING = \"REQUEST_LOADING\";\nexport const REQUEST_SUCCESS = \"REQUEST_SUCCESS\";\nexport const REQUEST_FAILED = \"REQUEST_FAILED\";\n\nexport const CURRENT_ACTION = \"CURRENT_ACTION\";\nexport const RESET_ACTION = \"RESET_ACTION\";\n","export const RESET_STATE = \"RESET_STATE\";\nexport const CURRENT_ITEM = \"CURRENT_ITEM\";\n\nexport const REQUEST_LOADING = \"REQUEST_LOADING\";\nexport const REQUEST_SUCCESS = \"REQUEST_SUCCESS\";\nexport const REQUEST_FAILED = \"REQUEST_FAILED\";\n\nexport const CURRENT_ACTION = \"CURRENT_ACTION\";\nexport const RESET_ACTION = \"RESET_ACTION\";\n","export const INIT_STATE = \"INIT_STATE\";\nexport const RESET_STATE = \"RESET_STATE\";\nexport const CURRENT_SELECTED = \"CURRENT_SELECTED\";\n\nexport const REQUEST_LOADING = \"REQUEST_LOADING\";\nexport const REQUEST_SUCCESS = \"REQUEST_SUCCESS\";\nexport const REQUEST_FAILED = \"REQUEST_FAILED\";\n\nexport const RESET_REF = \"RESET_REF\";\n","export const FAILED_REQUEST = \"FAILED_REQUEST\";\nexport const LOADING_REQUEST = \"LOADING_REQUEST\";\n\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\n\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\n","import { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\n\nimport axios from \"axios\";\nimport errorHandler from \"@/request/errorHandler\";\nimport successHandler from \"@/request/successHandler\";\nimport storePersist from \"@/redux/storePersist\";\n\nimport { getCookie, setCookie, deleteCookie } from \"./cookie\";\n\nexport const login = async (loginUserData) => {\n  try {\n    const response = await axios.post(\n      API_BASE_URL + `login?timestamp=${new Date().getTime()}`,\n      loginUserData\n    );\n    token.set(response.data.result.token);\n    return successHandler(response);\n  } catch (error) {\n    return errorHandler(error);\n  }\n};\n\nexport const logout = () => {\n  token.remove();\n  storePersist.clear();\n};\n\nexport const token = {\n  get: () => {\n    return getCookie(ACCESS_TOKEN_NAME);\n  },\n  set: (token) => {\n    return setCookie(ACCESS_TOKEN_NAME, token);\n  },\n  remove: () => {\n    return deleteCookie(ACCESS_TOKEN_NAME);\n  },\n};\n","// export function getCookie(cookieName) {\n//   var name = cookieName + \"=\";\n//   var ca = document.cookie.split(\";\");\n//   for (var i = 0; i < ca.length; i++) {\n//     var c = ca[i];\n//     while (c.charAt(0)===\" \") {\n//       c = c.substring(1);\n//     }\n//     if (c.indexOf(name)===0) {\n//       return c.substring(name.length, c.length);\n//     }\n//   }\n//   return \"\";\n// }\n\n// export function setCookie(cookieName, cookieValue, expireDays = 1) {\n//   var d = new Date();\n//   d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\n//   var expires = \"expires=\" + d.toUTCString();\n//   document.cookie = cookieName + \"=\" + cookieValue + \";\" + expires + \";path=/\";\n// }\n\n// export function deleteCookie(cookieName) {\n//   document.cookie = cookieName + \"=; Max-Age=-99999999; \";\n//   return true;\n// }\n\nexport function setCookie(cookieName, cookieValue) {\n  window.localStorage.setItem(cookieName, JSON.stringify(cookieValue));\n}\nexport function getCookie(cookieName) {\n  const result = window.localStorage.getItem(cookieName);\n  return JSON.parse(result);\n}\nexport function deleteCookie(cookieName) {\n  window.localStorage.removeItem(cookieName);\n  return true;\n}\n","export const API_BASE_URL = \"http://idurarapi.herokuapp.com/api/\";\nexport const ACCESS_TOKEN_NAME = \"x-auth-token\";\nexport const DOWNLOAD_BASE_URL = \"http://idurarapi.herokuapp.com/download/\";\n","export const storePersist = {\n  set: (key, state) => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  },\n  get: (key) => {\n    const result = window.localStorage.getItem(key);\n    return JSON.parse(result);\n  },\n  remove: (key) => {\n    window.localStorage.removeItem(key);\n  },\n  getAll: () => {\n    return window.localStorage;\n  },\n  clear: () => {\n    window.localStorage.clear();\n  },\n};\n\nexport default storePersist;\n","const codeMessage = {\n  200: \"The server successfully returned the requested data. \",\n  201: \"Create or modify data successfully. \",\n  202: \"A request has entered the background queue (asynchronous task). \",\n  204: \"Delete data successfully. \",\n  400: \"There was an error in the request sent, and the server did not create or modify data. \",\n  401: \"The user does not have permission please try to login again. \",\n  403: \"The user is authorized, but access is forbidden. \",\n  404: \"The request sent is for a record that does not exist, and the server is not operating. \",\n  406: \"The requested format is not available. \",\n  410: \"The requested resource has been permanently deleted and will no longer be available. \",\n  422: \"When creating an object, a validation error occurred. \",\n  500: \"An error occurred in the server, please check the server. \",\n  502: \"Gateway error. \",\n  503: \"The service is unavailable, the server is temporarily overloaded or maintained. \",\n  504: \"The gateway has timed out. \",\n};\n\nexport default codeMessage;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n"],"sourceRoot":""}