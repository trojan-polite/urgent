{"version":3,"sources":["context/crud/types.js","context/crud/reducer.js","context/crud/actions.js","context/crud/selectors.js","context/crud/index.js","context/erp/types.js","context/erp/reducer.js","context/erp/actions.js","context/erp/selectors.js","context/erp/index.js","request/request.js","redux/crud/actions.js","redux/crud/selectors.js","utils/uniqueId.js","redux/auth/actions.js","components/Loading/index.js","utils/helpers.js","layout/DefaultLayout/index.js","layout/HeaderContent/index.js","components/CollapseBox/index.js","components/SidePanel/index.js","layout/CrudLayout/index.js","layout/ErpContextLayout/index.js","layout/ErpLayout/index.js","layout/DashboardLayout/index.js","components/CrudPanel/DataTable.js","components/CrudPanel/Create.js","components/CrudPanel/Update.js","components/CrudPanel/Delete.js","components/CrudPanel/Read.js","components/CrudPanel/Search.js","components/CrudPanel/index.js","forms/FormCustomer.js","pages/Customer.js"],"names":["OPEN_MODAL","CLOSE_MODAL","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","COLLAPSE_READ_BOX","initialState","isModalOpen","isPanelCollapsed","isBoxCollapsed","isReadBoxOpen","contextReducer","state","action","type","actionTypes","Error","contextActions","dispatch","modal","open","close","panel","collapse","collapsedBox","readBox","console","log","contextSelectors","isPanelOpen","isBoxOpen","CrudContext","createContext","CrudContextProvider","children","useReducer","value","useMemo","Provider","useCrudContext","context","useContext","undefined","crudContextAction","crudContextSelector","create","isOpen","update","read","deleteModal","listDataTable","keyState","readPanel","updatePanel","createPanel","ErpContext","ErpContextProvider","useErpContext","erpContextAction","erpContextSelector","headersInstance","ACCESS_TOKEN_NAME","tokenCookies","get","axiosInstance","axios","baseURL","API_BASE_URL","timeout","headers","request","entity","jsonData","a","defaults","post","response","successHandler","errorHandler","id","patch","delete","filter","option","equal","query","search","source","fields","question","cancelToken","token","list","page","items","entityUrl","CancelToken","crud","resetState","resetAction","actionType","payload","currentItem","data","currentAction","currentPage","success","result","pagination","current","parseInt","pageSize","total","count","itemId","cancel","selectCrud","selectCurrentItem","createSelector","selectListItems","selectItemById","find","item","_id","selectCreatedItem","selectUpdatedItem","selectDeletedItem","selectSearchedItems","uniqueId","idstr","String","fromCharCode","Math","floor","random","ascicodeChar","length","login","loginUserData","loading","authService","authValue","user","isLoggedIn","storePersist","set","history","push","logout","Loading","isLoading","antIcon","style","fontSize","spin","indicator","spinning","valueByString","obj","string","devider","split","map","key","reduce","o","x","join","Object","byString","s","replace","i","n","k","DefaultLayout","Header","Layout","HeaderContent","useDispatch","menu","Item","onClick","target","rel","href","className","padding","background","overlay","placement","arrow","icon","UserOutlined","CollapseBoxButton","onChange","title","TopCollapseBox","show","display","opacity","span","BottomCollapseBox","CollapseBox","topContent","bottomContent","buttonTitle","isCollapsed","onCollapse","collapsed","isDiplayed","width","marginLeft","Sider","SidePanel","config","fixHeaderPanel","useState","styleSider","setStyleSider","opacitySider","setOpacitySider","useEffect","setTimeout","trigger","MenuOutlined","collapsible","collapsedWidth","zeroWidthTriggerStyle","right","top","left","Content","CrudLayout","sidePanelTopContent","sidePanelBottomContent","minHeight","margin","maxWidth","ErpContextLayout","ErpLayout","DashboardLayout","AddNewItem","DropDownRowMenu","row","useSelector","EyeOutlined","EditOutlined","DeleteOutlined","DataTable","dataTableColumns","render","EllipsisOutlined","cursor","listResult","listIsLoading","handelDataTableLoad","useCallback","onBack","window","back","ghost","tags","color","subTitle","extra","columns","rowKey","dataSource","Create","formElements","isSuccess","Form","useForm","form","resetFields","layout","onFinish","fieldsValue","birthday","format","date","htmlType","Update","dayjs","setFieldsValue","Delete","entityDisplayLabels","deleteMessage","deleteModalDelete","displayItem","setDisplayItem","labels","visible","onOk","onCancel","confirmLoading","Read","readColumns","currentResult","listState","setListState","isFirstRun","useRef","props","propsKey","dataIndex","propsTitle","label","itemsList","gutter","Search","searchConfig","displayLabels","searchFields","outputValue","setValue","options","setOptions","isTyping","delayTimer","optionResults","onSelect","onSearch","searchText","clearTimeout","currentValue","notFoundContent","allowClear","placeholder","suffix","SearchOutlined","SidePanelTopContent","FixHeaderPanel","marginBottom","panelTitle","block","PlusOutlined","CrudPanel","createForm","updateForm","useLayoutEffect","FormCustomer","name","rules","required","message","paddingRight","paddingLeft","Customer","dataTableTitle"],"mappings":"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","file":"static/js/CustomerPage.19d74b21.chunk.js","sourcesContent":["export const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const OPEN_PANEL = \"OPEN_PANEL\";\nexport const CLOSE_PANEL = \"CLOSE_PANEL\";\nexport const COLLAPSE_PANEL = \"COLLAPSE_PANEL\";\n\nexport const OPEN_BOX = \"OPEN_BOX\";\nexport const CLOSE_BOX = \"CLOSE_BOX\";\nexport const COLLAPSE_BOX = \"COLLAPSE_BOX\";\n\nexport const OPEN_READ_BOX = \"OPEN_READ_BOX\";\nexport const CLOSE_READ_BOX = \"CLOSE_READ_BOX\";\nexport const COLLAPSE_READ_BOX = \"COLLAPSE_READ_BOX\";\n","import * as actionTypes from \"./types\";\n\nexport const initialState = {\n  isModalOpen: false,\n  isPanelCollapsed: false,\n  isBoxCollapsed: false,\n  isReadBoxOpen: true,\n};\n\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: false,\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: true,\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: !state.isPanelCollapsed,\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true,\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false,\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed,\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: true,\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from \"./types\";\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    panel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_PANEL });\n      },\n    },\n    collapsedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_BOX });\n      },\n    },\n    readBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_READ_BOX });\n        console.log(\"readBox open\");\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_READ_BOX });\n        console.log(\"readBox close\");\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_READ_BOX });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from \"react\";\nimport { initialState, contextReducer } from \"./reducer\";\nimport contextActions from \"./actions\";\nimport contextSelectors from \"./selectors\";\n\nconst CrudContext = createContext();\n\nfunction CrudContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\n}\n\nfunction useCrudContext() {\n  const context = useContext(CrudContext);\n  if (context === undefined) {\n    throw new Error(\"useCrudContext must be used within a CrudContextProvider\");\n  }\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return { state, crudContextAction, crudContextSelector };\n}\n\nexport { CrudContextProvider, useCrudContext };\n","export const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const OPEN_PANEL = \"OPEN_PANEL\";\nexport const CLOSE_PANEL = \"CLOSE_PANEL\";\nexport const COLLAPSE_PANEL = \"COLLAPSE_PANEL\";\n","import * as actionTypes from \"./types\";\n\nexport const initialState = {\n  create: {\n    isOpen: false,\n  },\n  update: {\n    isOpen: false,\n  },\n  read: {\n    isOpen: false,\n  },\n  deleteModal: {\n    isOpen: false,\n  },\n  listDataTable: {\n    isOpen: true,\n  },\n};\n\nexport function contextReducer(state, action) {\n  const { keyState = null } = action;\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        deleteModal: { isOpen: true },\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        deleteModal: { isOpen: false },\n      };\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...initialState,\n        listDataTable: {\n          isOpen: false,\n        },\n        [keyState]: { isOpen: true },\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...initialState,\n      };\n\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from \"./types\";\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    readPanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: \"read\" });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    updatePanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: \"update\" });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    createPanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: \"create\" });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from \"react\";\nimport { initialState, contextReducer } from \"./reducer\";\nimport contextActions from \"./actions\";\nimport contextSelectors from \"./selectors\";\n\nconst ErpContext = createContext();\n\nfunction ErpContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <ErpContext.Provider value={value}>{children}</ErpContext.Provider>;\n}\n\nfunction useErpContext() {\n  const context = useContext(ErpContext);\n  if (context === undefined) {\n    throw new Error(\"useErpContext must be used within a ErpContextProvider\");\n  }\n  const [state, dispatch] = context;\n  const erpContextAction = contextActions(dispatch);\n  const erpContextSelector = contextSelectors(state);\n  return { state, erpContextAction, erpContextSelector };\n}\n\nexport { ErpContextProvider, useErpContext };\n","import axios from \"axios\";\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\nimport { token as tokenCookies } from \"@/auth\";\nimport errorHandler from \"./errorHandler\";\nimport successHandler from \"./successHandler\";\n\nconst headersInstance = { [ACCESS_TOKEN_NAME]: tokenCookies.get() };\n\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    ...headersInstance,\n  },\n});\n// let isConnected = true;\n// window.onoffline = (event) => {\n//   isConnected = false;\n// };\n\nconst request = {\n  create: async (entity, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    console.log(\"jsonData\", jsonData);\n    try {\n      const response = await axiosInstance.post(entity + \"/create\", jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  read: async (entity, id) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.get(entity + \"/read/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  update: async (entity, id, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.patch(\n        entity + \"/update/\" + id,\n        jsonData\n      );\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  delete: async (entity, id, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.delete(entity + \"/delete/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  filter: async (entity, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      let filter = option.filter ? \"filter=\" + option.filter : \"\";\n      let equal = option.equal ? \"&equal=\" + option.equal : \"\";\n      let query = `?${filter}${equal}`;\n\n      const response = await axiosInstance.get(entity + \"/filter\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  search: async (entity, source, option = {}) => {\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\n    };\n    try {\n      let query = \"\";\n      if (option !== {}) {\n        let fields = option.fields ? \"fields=\" + option.fields : \"\";\n        let question = option.question ? \"&q=\" + option.question : \"\";\n        query = `?${fields}${question}`;\n      }\n      // headersInstance.cancelToken = source.token;\n      const response = await axiosInstance.get(entity + \"/search\" + query, {\n        cancelToken: source.token,\n      });\n\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  list: async (entity, option = {}) => {\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\n    };\n    console.log(tokenCookies.get());\n    try {\n      let query = \"\";\n      if (option !== {}) {\n        let page = option.page ? \"page=\" + option.page : \"\";\n        let items = option.items ? \"&items=\" + option.items : \"\";\n        query = `?${page}${items}`;\n      }\n\n      const response = await axiosInstance.get(entity + \"/list\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  post: async (entityUrl, jsonData, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.post(entityUrl, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  get: async (entityUrl, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.get(entityUrl);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  source: () => {\n    // const CancelToken = await axiosInstance.CancelToken;\n\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    return source;\n  },\n};\nexport default request;\n\n// export const searchSync = (target, source, option = {}) => {\n//   if (option.loaderWarpper) {\n//     loader.init(option.loaderWarpper);\n//   }\n//   let query = \"\";\n//   if (option !=={}) {\n//     let fields = \"\";\n//     let question = \"\";\n//     if (option.fields) {\n//       fields = \"fields=\" + option.fields;\n//     }\n//     if (option.question) {\n//       question = \"&q=\" + option.question;\n//     }\n//     query = `?${fields}${question}`;\n//   }\n\n//   const result = axios\n//     .get(baseUrl + target + \"/search\" + query, {\n//       cancelToken: source.token,\n//     })\n//     .then((response) => {\n//       // returning the data here allows the caller to get it through another .then(...)\n//       //console.log(response.data);\n//       return response.data;\n//     })\n//     .catch(function (error) {\n//       if (error.response === undefined) {\n//         return { success: false };\n//       } else {\n//         return error.response.data;\n//       }\n//     })\n//     .finally(function () {\n//       if (option.loaderWarpper) {\n//         loader.remove(option.loaderWarpper);\n//       }\n//     });\n\n//   return result;\n// };\n","import * as actionTypes from \"./types\";\nimport { request } from \"@/request\";\n\nexport const crud = {\n  resetState: () => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_STATE,\n    });\n  },\n  resetAction: (actionType) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_ACTION,\n      keyState: actionType,\n      payload: null,\n    });\n  },\n  currentItem: (data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ITEM,\n      payload: { ...data },\n    });\n  },\n  currentAction: (actionType, data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ACTION,\n      keyState: actionType,\n      payload: { ...data },\n    });\n  },\n  list: (entity, currentPage = 1) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"list\",\n      payload: null,\n    });\n\n    let data = await request.list(entity, { page: currentPage });\n\n    if (data.success === true) {\n      const result = {\n        items: data.result,\n        pagination: {\n          current: parseInt(data.pagination.page, 10),\n          pageSize: 10,\n          total: parseInt(data.pagination.count, 10),\n        },\n      };\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"list\",\n        payload: result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"list\",\n        payload: null,\n      });\n    }\n  },\n  create: (entity, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"create\",\n      payload: null,\n    });\n    console.log(\"jsonData action redux\", jsonData);\n    let data = await request.create(entity, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"create\",\n        payload: data.result,\n      });\n\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"create\",\n        payload: null,\n      });\n    }\n  },\n  read: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"read\",\n      payload: null,\n    });\n\n    let data = await request.read(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"read\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"read\",\n        payload: null,\n      });\n    }\n  },\n  update: (entity, itemId, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"update\",\n      payload: null,\n    });\n\n    let data = await request.update(entity, itemId, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"update\",\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"update\",\n        payload: null,\n      });\n    }\n  },\n\n  delete: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"delete\",\n      payload: null,\n    });\n\n    let data = await request.delete(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"delete\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"delete\",\n        payload: null,\n      });\n    }\n  },\n\n  search: (entity, source, option) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"search\",\n      payload: null,\n    });\n\n    source.cancel();\n\n    source = request.source();\n    let data = await request.search(entity, source, option);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"search\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"search\",\n        payload: null,\n      });\n    }\n  },\n};\n","import { createSelector } from \"reselect\";\n\nconst selectCrud = (state) => state.crud;\n\nexport const selectCurrentItem = createSelector(\n  [selectCrud],\n  (crud) => crud.current\n);\n\nexport const selectListItems = createSelector(\n  [selectCrud],\n  (crud) => crud.list\n);\nexport const selectItemById = (itemId) =>\n  createSelector(selectListItems, (list) =>\n    list.result.items.find((item) => item._id === itemId)\n  );\n\nexport const selectCreatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.create\n);\n\nexport const selectUpdatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.update\n);\n\nexport const selectReadItem = createSelector([selectCrud], (crud) => crud.read);\n\nexport const selectDeletedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.delete\n);\n\nexport const selectSearchedItems = createSelector(\n  [selectCrud],\n  (crud) => crud.search\n);\n","export default function uniqueId() {\n  // always start with a letter (for DOM friendlyness)\n  var idstr = String.fromCharCode(Math.floor(Math.random() * 25 + 65));\n  do {\n    // between numbers and characters (48 is 0 and 90 is Z (42-48 = 90)\n    var ascicodeChar = Math.floor(Math.random() * 25 + 65);\n    idstr += String.fromCharCode(ascicodeChar);\n    idstr += Math.floor(Math.random() * 99);\n  } while (idstr.length < 8);\n\n  return idstr;\n}\n","import * as actionTypes from \"./types\";\nimport * as authService from \"@/auth\";\nimport storePersist from \"@/redux/storePersist\";\nimport history from \"@/utils/history\";\n\nexport const login = (loginUserData) => async (dispatch) => {\n  dispatch({\n    type: actionTypes.LOADING_REQUEST,\n    payload: { loading: true },\n  });\n  const data = await authService.login(loginUserData);\n\n  if (data.success === true) {\n    const authValue = {\n      current: data.result.user,\n      loading: false,\n      isLoggedIn: true,\n    };\n    storePersist.set(\"auth\", authValue);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: data.result.user,\n    });\n    history.push(\"/\");\n  } else {\n    dispatch({\n      type: actionTypes.FAILED_REQUEST,\n      payload: data,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  authService.logout();\n  dispatch({\n    type: actionTypes.LOGOUT_SUCCESS,\n  });\n  history.push(\"/login\");\n};\n","import React from \"react\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nexport default function Loading({ isLoading, children }) {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return (\n    <Spin indicator={antIcon} spinning={isLoading}>\n      {children}\n    </Spin>\n  );\n}\n","import { parse } from \"querystring\";\nfunction getPageQuery() {\n  parse(window.location.href.split(\"?\")[1]);\n}\n\n/* \n To get nested object properties.\n user = {\n    location: {\n        lat: 50,\n        long: 9\n    }\n }\n\n get(user, 'location.lat')     // 50\n get(user, 'location.foo.bar') // undefined\n*/\n\nexport function get(obj, key) {\n  return key.split(\".\").reduce(function (o, x) {\n    return o === undefined || o === null ? o : o[x];\n  }, obj);\n\n  // key.split('.').reduce(function(o, x) {\n  //     return (o === undefined || o === null) ? o : o[x];\n  //   }, obj);\n}\n\nObject.byString = function (o, s) {\n  s = s.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\n  s = s.replace(/^\\./, \"\"); // strip a leading dot\n  var a = s.split(\".\");\n  for (var i = 0, n = a.length; i < n; ++i) {\n    var k = a[i];\n    if (o !== null) {\n      if (k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n  return o;\n};\n\n/* \n To check only if a property exists, without getting its value. It similer get function.\n*/\nexport function has(obj, key) {\n  return key.split(\".\").every(function (x) {\n    if (typeof obj !== \"object\" || obj === null || x in obj === false)\n      /// !x in obj or  x in obj === true *** if you find any bug\n      return false;\n    obj = obj[x];\n    return true;\n  });\n}\n\n/* \n convert indexes to properties\n*/\nexport function valueByString(obj, string, devider) {\n  if (devider === undefined) {\n    devider = \"|\";\n  }\n  return string\n    .split(devider)\n    .map(function (key) {\n      return get(obj, key);\n    })\n    .join(\" \");\n}\n\n/*\n Submit multi-part form using ajax.\n*/\nexport function toFormData(form) {\n  var formData = new FormData();\n  const elements = form.querySelectorAll(\"input, select, textarea\");\n  for (let i = 0; i < elements.length; ++i) {\n    const element = elements[i];\n    const name = element.name;\n\n    if (name && element.dataset.disabled !== \"true\") {\n      if (element.type === \"file\") {\n        const file = element.files[0];\n        formData.append(name, file);\n      } else {\n        const value = element.value;\n        if (value && value.trim()) {\n          formData.append(name, value);\n        }\n      }\n    }\n  }\n\n  return formData;\n}\n\n/*\n Format Date to display user\n*/\nexport function formatDate(param) {\n  const date = new Date(param);\n  let day = date.getDate().toString();\n  let month = (date.getMonth() + 1).toString();\n  const year = date.getFullYear();\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n  const fullDate = `${day}/${month}/${year}`;\n  return fullDate;\n}\n\n/*\n Format Datetime to display user\n*/\nexport function formatDatetime(param) {\n  let time = new Date(param).toLocaleTimeString();\n  return formatDate(param) + \" \" + time;\n}\n\n/*\n Set object value in html\n*/\nexport function bindValue(obj, parentElement) {\n  parentElement.querySelectorAll(\"[data-property]\").forEach((element) => {\n    const type = element.dataset.type;\n    let value = valueByString(obj, element.dataset.property);\n    console.log({ type });\n    switch (type) {\n      case \"date\":\n        value = formatDate(value);\n        break;\n\n      case \"datetime\":\n        value = formatDatetime(value);\n        break;\n\n      case \"currency\":\n        value = value.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n        break;\n\n      default:\n        break;\n    }\n    element.innerHTML = value;\n  });\n}\n\nexport default getPageQuery;\n","import React from \"react\";\n\nimport { CrudContextProvider } from \"@/context/crud\";\n\nfunction DefaultLayout({ children }) {\n  return <CrudContextProvider>{children}</CrudContextProvider>;\n}\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Layout, Avatar, Menu, Dropdown } from \"antd\";\n\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { logout } from \"@/redux/auth/actions\";\nconst { Header } = Layout;\n\nexport default function HeaderContent() {\n  const dispatch = useDispatch();\n\n  const menu = (\n    <Menu>\n      <Menu.Item onClick={() => dispatch(logout())}>logout</Menu.Item>\n      <Menu.Item>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.taobao.com/\"\n        >\n          2nd menu item\n        </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.tmall.com/\"\n        >\n          3rd menu item\n        </a>\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <Header\n      className=\"site-layout-background\"\n      style={{ padding: 0, background: \"none\" }}\n    >\n      <Dropdown overlay={menu} placement=\"bottomRight\" arrow>\n        <Avatar icon={<UserOutlined />} />\n      </Dropdown>\n    </Header>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Row, Col } from \"antd\";\n\nconst CollapseBoxButton = ({ onChange, title }) => {\n  return (\n    <div className=\"collapseBoxHeader\" onClick={onChange}>\n      {title}\n    </div>\n  );\n};\n\nconst TopCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n  return (\n    <div className=\"TopCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst BottomCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"none\", opacity: 0 }\n    : { display: \"block\", opacity: 1 };\n  return (\n    <div className=\"BottomCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default function CollapseBox({\n  topContent,\n  bottomContent,\n  buttonTitle,\n  isCollapsed,\n  onCollapse,\n  isPanelCollapsed,\n}) {\n  const collapsed = isCollapsed ? \"collapsed\" : \"\";\n  const isDiplayed = isPanelCollapsed ? \"-400px\" : \"0px\";\n  return (\n    <div\n      className=\"panelBox\"\n      style={{ width: \"400px\", marginLeft: isDiplayed }}\n    >\n      <TopCollapseBox isOpen={isCollapsed}>{topContent}</TopCollapseBox>\n      <div className={\"collapseBox \" + collapsed}>\n        <CollapseBoxButton title={buttonTitle} onChange={onCollapse} />\n        <div className=\"whiteBg\"></div>\n        <BottomCollapseBox isOpen={isCollapsed}>\n          {bottomContent}\n        </BottomCollapseBox>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { Layout } from \"antd\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport CollapseBox from \"../CollapseBox\";\n\nconst { Sider } = Layout;\n\nexport default function SidePanel({\n  config,\n  topContent,\n  bottomContent,\n  fixHeaderPanel,\n}) {\n  const { state, crudContextAction } = useCrudContext();\n  const { isPanelCollapsed, isBoxCollapsed } = state;\n  const { panel, collapsedBox } = crudContextAction;\n  const [styleSider, setStyleSider] = useState(\"0px\");\n  const [opacitySider, setOpacitySider] = useState(\"1\");\n\n  useEffect(() => {\n    if (isPanelCollapsed) {\n      setStyleSider(\"-400px\");\n      setOpacitySider(0);\n    } else {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }\n\n    setTimeout(() => {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }, 300);\n  }, [isPanelCollapsed]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return (\n    <Sider\n      trigger={<MenuOutlined className=\"trigger\" />}\n      width={400}\n      collapsible\n      collapsed={isPanelCollapsed}\n      collapsedWidth={\"0px\"}\n      onCollapse={collapsePanel}\n      zeroWidthTriggerStyle={{\n        right: \"-50px\",\n        top: \"15px\",\n      }}\n      style={{\n        background: \"#FFF\",\n        left: styleSider,\n        opacity: opacitySider,\n      }}\n    >\n      {fixHeaderPanel}\n      <CollapseBox\n        buttonTitle=\"Add new Customer\"\n        isPanelCollapsed={isPanelCollapsed}\n        isCollapsed={isBoxCollapsed}\n        onCollapse={collapsePanelBox}\n        topContent={topContent}\n        bottomContent={bottomContent}\n      ></CollapseBox>\n    </Sider>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport SidePanel from \"@/components/SidePanel\";\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function CrudLayout({\n  children,\n  config,\n  sidePanelTopContent,\n  sidePanelBottomContent,\n  fixHeaderPanel,\n}) {\n  return (\n    <DefaultLayout>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SidePanel\n          config={config}\n          topContent={sidePanelTopContent}\n          bottomContent={sidePanelBottomContent}\n          fixHeaderPanel={fixHeaderPanel}\n        ></SidePanel>\n        <Layout className=\"site-layout\">\n          <HeaderContent />\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: \"50px 40px\",\n              margin: \"50px auto\",\n              width: \"100%\",\n              maxWidth: \"1000px\",\n            }}\n          >\n            {children}\n          </Content>\n        </Layout>\n      </Layout>\n    </DefaultLayout>\n  );\n}\n","import React from \"react\";\n\nimport { ErpContextProvider } from \"@/context/erp\";\n\nfunction ErpContextLayout({ children }) {\n  return <ErpContextProvider>{children}</ErpContextProvider>;\n}\n\nexport default ErpContextLayout;\n","import React from \"react\";\n\nimport ErpContextLayout from \"../ErpContextLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function ErpLayout({ children, config }) {\n  return (\n    <ErpContextLayout>\n      <Layout className=\"site-layout\">\n        <HeaderContent />\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            padding: \"50px 40px\",\n            margin: \"50px auto\",\n            width: \"100%\",\n            maxWidth: \"1100px\",\n          }}\n        >\n          {children}\n        </Content>\n      </Layout>\n    </ErpContextLayout>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function DashboardLayout({ children }) {\n  return (\n    <Layout className=\"site-layout\">\n      <HeaderContent />\n      <Content\n        style={{\n          padding: \"30px 40px\",\n          margin: \"20px auto\",\n          width: \"100%\",\n          maxWidth: \"1100px\",\n        }}\n      >\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { Dropdown, Menu, Table } from \"antd\";\nimport { Button, PageHeader, Row, Statistic, Tag } from \"antd\";\nimport {\n  EllipsisOutlined,\n  EyeOutlined,\n  EditOutlined,\n  DeleteOutlined,\n} from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectListItems, selectItemById } from \"@/redux/crud/selectors\";\nimport { useCrudContext } from \"@/context/crud\";\nimport uniqueId from \"@/utils/uniqueId\";\n\nfunction AddNewItem() {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox, panel } = crudContextAction;\n  const handelClick = () => {\n    panel.open();\n    collapsedBox.close();\n  };\n\n  return (\n    <Button onClick={handelClick} type=\"primary\">\n      Add new Customer\n    </Button>\n  );\n}\nfunction DropDownRowMenu({ row }) {\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, modal, readBox } = crudContextAction;\n  const item = useSelector(selectItemById(row._id));\n  const Show = () => {\n    dispatch(crud.currentItem(item));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  function Edit() {\n    dispatch(crud.currentAction(\"update\", item));\n    readBox.close();\n    panel.open();\n    collapsedBox.open();\n  }\n  function Delete() {\n    dispatch(crud.currentAction(\"delete\", item));\n    modal.open();\n  }\n  return (\n    <Menu style={{ width: 130 }}>\n      <Menu.Item icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item icon={<DeleteOutlined />} onClick={Delete}>\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function DataTable({ config }) {\n  let { entity, dataTableColumns } = config;\n  dataTableColumns = [\n    ...dataTableColumns,\n    {\n      title: \"\",\n      render: (row) => (\n        <Dropdown overlay={DropDownRowMenu({ row })} trigger={[\"click\"]}>\n          <EllipsisOutlined style={{ cursor: \"pointer\", fontSize: \"24px\" }} />\n        </Dropdown>\n      ),\n    },\n  ];\n\n  const { result: listResult, isLoading: listIsLoading } = useSelector(\n    selectListItems\n  );\n\n  const { pagination, items } = listResult;\n\n  const dispatch = useDispatch();\n\n  const handelDataTableLoad = useCallback((pagination) => {\n    dispatch(crud.list(entity, pagination.current));\n  }, []);\n\n  useEffect(() => {\n    dispatch(crud.list(entity));\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title=\"Customer Page\"\n        ghost={false}\n        tags={<Tag color=\"blue\">Running</Tag>}\n        subTitle=\"This is customer page\"\n        extra={[\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\n            Refresh\n          </Button>,\n          <AddNewItem key={`${uniqueId()}`} />,\n        ]}\n        style={{\n          padding: \"20px 0px\",\n        }}\n      >\n        {/* <Row>\n          <Statistic title=\"Status\" value=\"Pending\" />\n          <Statistic\n            title=\"Price\"\n            prefix=\"$\"\n            value={568.08}\n            style={{\n              margin: \"0 32px\",\n            }}\n          />\n          <Statistic title=\"Balance\" prefix=\"$\" value={3345.08} />\n        </Row> */}\n      </PageHeader>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item._id}\n        dataSource={items}\n        pagination={pagination}\n        loading={listIsLoading}\n        onChange={handelDataTableLoad}\n      />\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCreatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nexport default function Create({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { isLoading, isSuccess } = useSelector(selectCreatedItem);\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const [form] = Form.useForm();\n  const onSubmit = (fieldsValue) => {\n    if (fieldsValue) {\n      if (fieldsValue.birthday) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n      if (fieldsValue.date) {\n        fieldsValue = {\n          ...fieldsValue,\n          date: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n    }\n\n    dispatch(crud.create(entity, fieldsValue));\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"create\"));\n      dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n\n  return (\n    <Loading isLoading={isLoading}>\n      <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n        {formElements}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </Loading>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nexport default function Update({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\n\n  const { state, crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  const [form] = Form.useForm();\n\n  const onSubmit = (fieldsValue) => {\n    if (fieldsValue) {\n      if (fieldsValue.birthday) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n      if (fieldsValue.date) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n    }\n\n    const id = current._id;\n    console.log(fieldsValue);\n    dispatch(crud.update(entity, id, fieldsValue));\n  };\n  useEffect(() => {\n    if (current) {\n      if (current.birthday) {\n        current.birthday = dayjs(current.birthday);\n      }\n      if (current.date) {\n        current.date = dayjs(current.date);\n      }\n      form.setFieldsValue(current);\n    }\n    // console.log(form.getFieldsValue());\n  }, [current]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"update\"));\n      dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n\n  const { isReadBoxOpen } = state;\n\n  const show = isReadBoxOpen\n    ? { display: \"none\", opacity: 0 }\n    : { display: \"block\", opacity: 1 };\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n          {formElements}\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Loading>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"antd\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectDeletedItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function Delete({ config }) {\n  let {\n    entity,\n    entityDisplayLabels,\n    deleteMessage = \"Do you want delete : \",\n    deleteModalDelete = \"Remove Item\",\n  } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\n  const { state, crudContextAction } = useCrudContext();\n  const { isModalOpen } = state;\n  const { modal } = crudContextAction;\n  const [displayItem, setDisplayItem] = useState(\"\");\n\n  useEffect(() => {\n    if (isSuccess) {\n      modal.close();\n      dispatch(crud.list(entity));\n    }\n    if (current) {\n      let labels = entityDisplayLabels\n        .map((x) => valueByString(current, x))\n        .join(\" \");\n\n      setDisplayItem(labels);\n    }\n  }, [isSuccess, current]);\n\n  const handleOk = () => {\n    const id = current._id;\n    dispatch(crud.delete(entity, id));\n  };\n  const handleCancel = () => {\n    if (!isLoading) modal.close();\n  };\n  return (\n    <Modal\n      title={deleteModalDelete}\n      visible={isModalOpen}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={isLoading}\n    >\n      <p>\n        {deleteMessage}\n        {displayItem}\n      </p>\n    </Modal>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCurrentItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function Read({ config }) {\n  let { readColumns } = config;\n  const { result: currentResult } = useSelector(selectCurrentItem);\n  const { state } = useCrudContext();\n  const { isReadBoxOpen } = state;\n  const [listState, setListState] = useState([]);\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    console.log(\"currentResult :\", currentResult);\n    console.log(\"readColumns :\", readColumns);\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const list = [];\n    readColumns.map((props) => {\n      const propsKey = props.dataIndex;\n      const propsTitle = props.title;\n      const value = valueByString(currentResult, propsKey);\n      list.push({ propsKey, label: propsTitle, value: value });\n    });\n    setListState(list);\n  }, [currentResult]);\n\n  const show = isReadBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n\n  const itemsList = listState.map((item) => {\n    return (\n      <Row key={item.propsKey} gutter={12}>\n        <Col className=\"gutter-row\" span={8}>\n          <p>{item.label}</p>\n        </Col>\n        <Col className=\"gutter-row\" span={2}>\n          <p> : </p>\n        </Col>\n        <Col className=\"gutter-row\" span={14}>\n          <p>{item.value}</p>\n        </Col>\n      </Row>\n    );\n  });\n\n  console.log(\"itemsList :\", itemsList);\n  return <div style={show}>{itemsList}</div>;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { AutoComplete, Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { request } from \"@/request\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectSearchedItems } from \"@/redux/crud/selectors\";\n\nimport { Empty } from \"antd\";\n\nexport default function Search({ config }) {\n  let { entity, searchConfig } = config;\n\n  const { displayLabels, searchFields, outputValue = \"_id\" } = searchConfig;\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const [options, setOptions] = useState([]);\n\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  let source = request.source();\n  const { result, isLoading, isSuccess } = useSelector(selectSearchedItems);\n\n  const isTyping = useRef(false);\n\n  let delayTimer = null;\n  useEffect(() => {\n    isLoading && setOptions([{ label: \"... Searching\" }]);\n  }, [isLoading]);\n  const onSearch = (searchText) => {\n    isTyping.current = true;\n\n    clearTimeout(delayTimer);\n    delayTimer = setTimeout(function () {\n      if (isTyping.current && searchText !== \"\") {\n        dispatch(\n          crud.search(entity, source, {\n            question: searchText,\n            fields: searchFields,\n          })\n        );\n      }\n      isTyping.current = false;\n    }, 500);\n  };\n\n  const onSelect = (data) => {\n    const currentItem = result.find((item) => {\n      return item[outputValue] === data;\n    });\n\n    dispatch(crud.currentItem(currentItem));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n\n  const onChange = (data) => {\n    const currentItem = options.find((item) => {\n      return item.value === data;\n    });\n    const currentValue = currentItem ? currentItem.label : data;\n    setValue(currentValue);\n  };\n\n  useEffect(() => {\n    let optionResults = [];\n\n    result.map((item) => {\n      const labels = displayLabels.map((x) => item[x]).join(\" \");\n      optionResults.push({ label: labels, value: item[outputValue] });\n    });\n\n    setOptions(optionResults);\n  }, [result]);\n\n  return (\n    <AutoComplete\n      value={value}\n      options={options}\n      style={{\n        width: \"100%\",\n      }}\n      onSelect={onSelect}\n      onSearch={onSearch}\n      onChange={onChange}\n      notFoundContent={!isSuccess ? <Empty /> : \"\"}\n      allowClear={true}\n      placeholder=\"Your Search here\"\n    >\n      <Input suffix={<SearchOutlined />} />\n    </AutoComplete>\n  );\n}\n","import React, { useLayoutEffect } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport DataTable from \"./DataTable\";\nimport Create from \"./Create\";\nimport Update from \"./Update\";\nimport Delete from \"./Delete\";\nimport Read from \"./Read\";\nimport Search from \"./Search\";\n\nimport { useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\n\nimport { CrudLayout } from \"@/layout\";\n\nfunction SidePanelTopContent({ config, formElements }) {\n  return (\n    <>\n      <Read config={config} />\n      <Update config={config} formElements={formElements} />\n    </>\n  );\n}\n\nfunction FixHeaderPanel({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox } = crudContextAction;\n\n  const addNewItem = () => {\n    collapsedBox.close();\n  };\n  return (\n    <div className=\"box\">\n      <Row gutter={12}>\n        <Col className=\"gutter-row\" span={21}>\n          <h1 style={{ fontSize: 20, marginBottom: 20 }}>\n            {config.panelTitle}\n          </h1>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={21}>\n          <Search config={config} />\n        </Col>\n        <Col className=\"gutter-row\" span={3}>\n          <Button\n            onClick={addNewItem}\n            block={true}\n            icon={<PlusOutlined />}\n          ></Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction CrudPanel({ config, createForm, updateForm }) {\n  const dispatch = useDispatch();\n  let form = {};\n  updateForm === undefined ? (form = createForm) : (form = updateForm);\n\n  useLayoutEffect(() => {\n    dispatch(crud.resetState());\n  }, []);\n\n  return (\n    <CrudLayout\n      config={config}\n      fixHeaderPanel={<FixHeaderPanel config={config} />}\n      sidePanelBottomContent={\n        <Create config={config} formElements={createForm} />\n      }\n      sidePanelTopContent={\n        <SidePanelTopContent config={config} formElements={form} />\n      }\n    >\n      <DataTable config={config} />\n      <Delete config={config} />\n    </CrudLayout>\n  );\n}\n\nexport default CrudPanel;\n","import React from \"react\";\nimport { Button, Form, Input } from \"antd\";\n\nexport default function FormCustomer() {\n  return (\n    <>\n      <Form.Item\n        label=\"company Name\"\n        name=\"company\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your company name!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Sur Name\"\n        name=\"managerSurname\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your surname!\",\n          },\n        ]}\n        style={{\n          display: \"inline-block\",\n          width: \"calc(50%)\",\n          paddingRight: \"5px\",\n        }}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Name\"\n        name=\"managerName\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your manager name!\",\n          },\n        ]}\n        style={{\n          display: \"inline-block\",\n          width: \"calc(50%)\",\n          paddingLeft: \"5px\",\n        }}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"phone\"\n        label=\"Phone\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your phone!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\",\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport CrudPanel from \"@/components/CrudPanel\";\nimport FormCustomer from \"@/forms/FormCustomer\";\n\nfunction Customer() {\n  const entity = \"client\";\n  const searchConfig = {\n    displayLabels: [\"company\"],\n    searchFields: \"company,managerSurname,managerName\",\n    outputValue: \"_id\",\n  };\n\n  const panelTitle = \"Customer Panel\";\n  const dataTableTitle = \"Patients Lists\";\n  const entityDisplayLabels = [\"company\"];\n\n  const readColumns = [\n    {\n      title: \"Company\",\n      dataIndex: \"company\",\n    },\n    {\n      title: \"Manager Surname\",\n      dataIndex: \"managerSurname\",\n    },\n    {\n      title: \"Manager Name\",\n      dataIndex: \"managerName\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n    },\n    {\n      title: \"Phone\",\n      dataIndex: \"phone\",\n    },\n  ];\n  const dataTableColumns = [\n    {\n      title: \"Company\",\n      dataIndex: \"company\",\n    },\n    {\n      title: \"Manager Surname\",\n      dataIndex: \"managerSurname\",\n    },\n    {\n      title: \"Manager Name\",\n      dataIndex: \"managerName\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n    },\n  ];\n\n  const config = {\n    entity,\n    panelTitle,\n    dataTableTitle,\n    readColumns,\n    dataTableColumns,\n    searchConfig,\n    entityDisplayLabels,\n  };\n  return (\n    <CrudPanel\n      entity={entity}\n      dataTableColumns={dataTableColumns}\n      createForm={<FormCustomer />}\n      readColumns={readColumns}\n      searchConfig={searchConfig}\n      config={config}\n    />\n  );\n}\n\nexport default Customer;\n"],"sourceRoot":""}